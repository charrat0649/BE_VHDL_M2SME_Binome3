/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000000000.0;
	SIMULATION_TIME = 10000000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk_50M")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in_freq_anemometre")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("internal_reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("frq_1_hz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("continu")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data_valid")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("start_stop")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data_anemometre")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data_anemometre[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("data_anemometre[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_anemometre";
}

SIGNAL("raz_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("clk_50M")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10000;
			LEVEL 0 FOR 500000.0;
			LEVEL 1 FOR 500000.0;
		}
	}
}

TRANSITION_LIST("in_freq_anemometre")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 5000000.0;
			LEVEL 1 FOR 5000000.0;
		}
	}
}

TRANSITION_LIST("internal_reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500500000.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 1000000.0;
			LEVEL 0 FOR 999000000.0;
		}
		LEVEL 1 FOR 1000000.0;
		LEVEL 0 FOR 498500000.0;
	}
}

TRANSITION_LIST("frq_1_hz")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 500000000.0;
			LEVEL 1 FOR 500000000.0;
		}
	}
}

TRANSITION_LIST("continu")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000000000.0;
	}
}

TRANSITION_LIST("data_valid")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 501500000.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 1000000.0;
			LEVEL 0 FOR 999000000.0;
		}
		LEVEL 1 FOR 1000000.0;
		LEVEL 0 FOR 497500000.0;
	}
}

TRANSITION_LIST("start_stop")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2325305985.428;
		LEVEL 1 FOR 413303504.847;
		LEVEL 0 FOR 7261390509.725;
	}
}

TRANSITION_LIST("data_anemometre[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000000.0;
	}
}

TRANSITION_LIST("data_anemometre[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1501500000.0;
		LEVEL 1 FOR 2000000000.0;
		LEVEL 0 FOR 1000000000.0;
		LEVEL 1 FOR 5498500000.0;
	}
}

TRANSITION_LIST("data_anemometre[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 501500000.0;
		LEVEL 1 FOR 9498500000.0;
	}
}

TRANSITION_LIST("data_anemometre[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 501500000.0;
		LEVEL 1 FOR 1000000000.0;
		LEVEL 0 FOR 8498500000.0;
	}
}

TRANSITION_LIST("data_anemometre[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3501500000.0;
		LEVEL 1 FOR 1000000000.0;
		LEVEL 0 FOR 5498500000.0;
	}
}

TRANSITION_LIST("data_anemometre[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1501500000.0;
		LEVEL 1 FOR 2000000000.0;
		LEVEL 0 FOR 1000000000.0;
		LEVEL 1 FOR 5498500000.0;
	}
}

TRANSITION_LIST("data_anemometre[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 501500000.0;
		LEVEL 1 FOR 1000000000.0;
		LEVEL 0 FOR 8498500000.0;
	}
}

TRANSITION_LIST("data_anemometre[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000000.0;
	}
}

TRANSITION_LIST("raz_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3004940355.84;
		LEVEL 0 FOR 97360178.971;
		LEVEL 1 FOR 6897699465.189;
	}
}

DISPLAY_LINE
{
	CHANNEL = "continu";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start_stop";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "frq_1_hz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_50M";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in_freq_anemometre";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "internal_reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data_valid";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11, 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "data_anemometre[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "raz_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 26300;
	MASTER = TRUE;
}
;
